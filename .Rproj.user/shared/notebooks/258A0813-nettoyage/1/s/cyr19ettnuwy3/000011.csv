"0",""
"0","# --- PR√âREQUIS : VOS DEUX OBJETS ---"
"0","# Assurez-vous que les objets 'map' (votre fond de carte sf) et 'agg_ept' (vos donn√©es)"
"0","# sont bien pr√©sents dans votre environnement R."
"0",""
"0",""
"0","# --- √âTAPE 1 : JOINDRE LES DONN√âES √Ä LA CARTE ---"
"0","library(dplyr)"
"0",""
"0","# On joint notre fond de carte avec nos donn√©es agr√©g√©es."
"0","# La cl√© de jointure est le nom du territoire."
"0","# Attention : dans 'map' la colonne s'appelle 'ept_name', et dans 'agg_ept' elle s'appelle 'nom_epci'."
"0","map_data_ept <- map %>%"
"0","  left_join(agg_ept, by = c(""ept_name"" = ""nom_epci"")) %>%"
"0","  # On ne garde que les territoires pour lesquels on a des donn√©es √† afficher"
"0","  filter(!is.na(score_egapro_moyen))"
"0",""
"0","# V√©rification rapide"
"0","cat(""‚úÖ Donn√©es et g√©om√©tries jointes. Pr√™t pour la cartographie.\n"")"
"1","‚úÖ Donn√©es et g√©om√©tries jointes. Pr√™t pour la cartographie.
"
"0","glimpse(map_data_ept)"
"1","Rows: 0"
"1",""
"1","
"
"1","Columns: 11"
"1",""
"1","
"
"1","$ com_code                    [3m[38;5;246m<chr>[39m[23m 
$ com_name                    [3m[38;5;246m<chr>[39m[23m 
$ ept_code                    [3m[38;5;246m<chr>[39m[23m 
$ ept_name                    [3m[38;5;246m<chr>[39m[23m 
$ dep_code                    [3m[38;5;246m<chr>[39m[23m 
$ dep_name                    [3m[38;5;246m<chr>[39m[23m 
$ n_entreprises               [3m[38;5;246m<int>[39m[23m 
$ score_egapro_moyen          [3m[38;5;246m<dbl>[39m[23m 
$ part_cadres_total_moyenne   [3m[38;5;246m<dbl>[39m[23m 
$ tx_tps_partiel_femmes_moyen [3m[38;5;246m<dbl>[39m[23m 
$ geometry                    [3m[38;5;246m<GEOMETRY [¬∞]>[39m[23m "
"1",""
"1","
"
"0","# --- √âTAPE 2 : CR√âER LA CARTE CHOROPL√àTHE INTERACTIVE ---"
"0","library(leaflet)"
"2","Registered S3 methods overwritten by 'htmltools':
  method               from         
  print.html           tools:rstudio
  print.shiny.tag      tools:rstudio
  print.shiny.tag.list tools:rstudio
"
"2","Registered S3 method overwritten by 'htmlwidgets':
  method           from         
  print.htmlwidget tools:rstudio
"
"0","library(htmltools)"
"0",""
"0",""
"0","# Cette fonction va associer une couleur √† une valeur de score."
"0","# On utilise la palette ""Blues"" : plus le score est √©lev√©, plus le bleu est fonc√©."
"0","palette_couleurs <- colorNumeric("
"0","  palette = ""Blues"","
"0","  domain = map_data_ept$score_egapro_moyen"
"0",")"
"0",""
"0","# 2b. Cr√©er le contenu HTML pour les pop-ups"
"0","popup_ept <- paste0("
"0","  ""<strong>"", map_data_ept$ept_name, ""</strong><br>"","
"0","  ""Score √âgapro moyen : <strong>"", round(map_data_ept$score_egapro_moyen, 1), ""</strong><br>"","
"0","  ""Nombre d'entreprises : "", map_data_ept$n_entreprises, ""<br>"","
"0","  ""Part de cadres : "", round(map_data_ept$part_cadres_total_moyenne, 1), ""%"""
"0",")"
"0",""
"0",""
"0","# 2c. G√©n√©rer la carte finale"
"0","carte_finale_ept <- leaflet(data = map_data_ept) %>%"
"0","  addProviderTiles(providers$CartoDB.Positron, group = ""Fond de carte"") %>%"
"0","  "
"0","  # On dessine les polygones des territoires"
"0","  addPolygons("
"0","    fillColor = ~palette_couleurs(score_egapro_moyen), # La couleur d√©pend du score"
"0","    fillOpacity = 0.7,"
"0","    weight = 1,          # Epaisseur de la bordure"
"0","    color = ""white"",     # Couleur de la bordure"
"0","    "
"0","    # Effet de surbrillance au survol de la souris"
"0","    highlightOptions = highlightOptions("
"0","      weight = 3,"
"0","      color = ""#666"","
"0","      fillOpacity = 0.9,"
"0","      bringToFront = TRUE"
"0","    ),"
"0","    "
"0","    # Contenu du pop-up au clic"
"0","    popup = ~lapply(popup_ept, HTML)"
"0","  ) %>%"
"0","  "
"0","  # On ajoute une l√©gende pour comprendre les couleurs"
"0","  addLegend("
"0","    pal = palette_couleurs,"
"0","    values = ~score_egapro_moyen,"
"0","    opacity = 0.7,"
"0","    title = ""Score √âgapro Moyen"","
"0","    position = ""bottomright"""
"0","  )"
"2","Warning: no non-missing arguments to min; returning Inf"
"2","Warning: no non-missing arguments to max; returning -Inf"
"0","# 2d. AFFICHER LA CARTE !"
"0","carte_finale_ept"
